///////////////////////////////////////////////////////////////////////////////
// Example.h
#pragma once

#include "ExampleInterfaces.h"
#include <ruckig/ruckig.hpp>

constexpr size_t kDOFS = 3;

class CExample 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST_LIB()
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CExample();
	virtual	~CExample();


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

	// Tracing
	CTcTrace m_Trace;

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	double m_Tolerance;
	ExampleInputs m_Inputs;
	ExampleOutputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	ruckig::Ruckig<kDOFS> m_otg{ 0.01 };  // control cycle
	ruckig::InputParameter<kDOFS> m_ruckig_input;
	ruckig::OutputParameter<kDOFS> m_ruckig_output;

	bool m_Running = false;
	size_t m_Steps = 0;
	ULONG m_ActiveExampleId = 1;

private:

	void CompareNumber(double a, double b);
};
